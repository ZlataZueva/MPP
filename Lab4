using System;
using System.Linq;
using System.IO;
using System.Reflection;

namespace Lab4
{
    class Program
    {
        private class AssemblyInfo
        {
            public static void CheckPathArg (string[] args, out string path)
            {
                if (args.Length != 1)
                {
                    throw new ArgumentException("Wrong number of parameters. Usage: path to assembly.");
                }
                path = args[0];
                if (!File.Exists(path))
                {
                    throw new FileNotFoundException("File {0} does not exist.",path);
                }
                string ext = Path.GetExtension(path);
                if (!(ext == ".exe" || ext==".dll"))
                {
                    throw new FormatException("Unknown extension: " + ext + ". Files with .exe and .dll extensions expected.");
                }
            }

            public static string[] LoadandListPublicTypes (string assemblyPath)
            {
                Assembly assembly = Assembly.LoadFrom(assemblyPath);
                var pubTypes = assembly.GetTypes().Where(type => type.IsPublic).OrderBy(type => type.Namespace + type.Name);
                string[] typesNames = new string[pubTypes.Count()];
                int i = 0;
                foreach (var type in pubTypes)
                {
                    typesNames[i] = type.FullName;
                    i++;
                }
                return typesNames;
            }
        }

        static void Main(string[] args)
        {
            string path= @"C:\Program Files\Reference Assemblies\Microsoft\Framework\v3.0\ReachFramework.dll";
            /*try
            {
                AssemblyInfo.CheckPathArg(args, out path);
            }
            catch (Exception e)
            {
                Console.WriteLine(e.GetType() +": "+ e.Message);
                Console.ReadLine();
                return;
            }*/
            try
            {
                string[] typesList = AssemblyInfo.LoadandListPublicTypes(path);
                foreach (string type in typesList)
                {
                    Console.WriteLine(type);
                }
            }
            catch (FileLoadException e)
            {
                Console.WriteLine(e.Message);
            }
            Console.ReadLine();
        }
    }
}
